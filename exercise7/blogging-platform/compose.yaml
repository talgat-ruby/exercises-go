# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    environment:
      - API_PORT=80
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - ${API_PORT}:80
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

volumes:
  postgres_data:
#services:
#  server:
#    build:
#      context: .
#      target: final
#    environment:
#      - API_PORT=80
#      - DB_HOST=db
#      - DB_PORT=5432
#      - DB_NAME=$DB_NAME
#      - DB_USER=$DB_USER
#      - DB_PASSWORD=$DB_PASSWORD
#    ports:
#      - ${API_PORT}:80
#    depends_on:
#      db:
#        condition: service_healthy
#
#  db:
#    image: postgres
#    restart: always
#    volumes:
#      - ./db-data:/var/lib/postgresql/data
#    environment:
#      - POSTGRES_DB=$DB_NAME
#      - POSTGRES_USER=$DB_USER
#      - POSTGRES_PASSWORD=$DB_PASSWORD
#    ports:
#      - ${DB_PORT}:5432
#    healthcheck:
#      test: [ "CMD", "pg_isready" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#volumes:
#  db-data:

